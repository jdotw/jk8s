---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: jk8s-cluster-set
spec:

  compositeTypeRef:
    apiVersion: jk8s.io/v1beta1
    kind: XClusterSet

  patchSets:
    - name: common-parameters
      patches:
        - fromFieldPath: "spec.parameters.region"
          toFieldPath: "spec.parameters.region"
        - fromFieldPath: "spec.parameters.name"
          toFieldPath: "spec.parameters.name"

  resources:

    # 
    # Prod Cluster
    #

    - name: prod-cluster
      base:
        apiVersion: jk8s.io/v1beta1
        kind: XCluster
        spec:
          parameters:
            environment:
              providerConfigName: prod
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: "spec.parameters.environments.production.hostedZoneID"
          toFieldPath: "spec.parameters.environment.hostedZoneID"
        - fromFieldPath: "spec.parameters.environments.production.hostedZoneName"
          toFieldPath: "spec.parameters.environment.hostedZoneName"
        - fromFieldPath: "spec.parameters.environments.production.awsAccountNumber"
          toFieldPath: "spec.parameters.environment.awsAccountNumber"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.parameters.repository.owner
              - fromFieldPath: status.repository.name
            strategy: string
            string:
              fmt: "https://%s.github.io/%s"
          toFieldPath: spec.parameters.repository.chartsURL
          policy:
            fromFieldPath: Required
        - fromFieldPath: "status.repository.gitURL"
          toFieldPath: "spec.parameters.repository.gitURL"
        - fromFieldPath: spec.parameters.privateRepository.name
          toFieldPath: spec.parameters.privateRepository.name
        - fromFieldPath: spec.parameters.privateRepository.url
          toFieldPath: spec.parameters.privateRepository.url
        - fromFieldPath: spec.parameters.privateRepository.externalSecret.name
          toFieldPath: spec.parameters.privateRepository.externalSecret.name
        - type: ToCompositeFieldPath
          fromFieldPath: status.kubernetesProviderConfigName
          toFieldPath: status.environments.production.kubernetesProviderConfigName
        - type: ToCompositeFieldPath
          fromFieldPath: status.sqlProviderConfigName
          toFieldPath: status.environments.production.sqlProviderConfigName
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.uid
          toFieldPath: status.environments.production.clusterID

        
    #
    # Dev Cluster
    #

    - name: dev-cluster
      base:
        apiVersion: jk8s.io/v1beta1
        kind: XCluster
        spec:
          parameters:
            environment:
              providerConfigName: dev
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: "spec.parameters.environments.development.hostedZoneID"
          toFieldPath: "spec.parameters.environment.hostedZoneID"
        - fromFieldPath: "spec.parameters.environments.development.hostedZoneName"
          toFieldPath: "spec.parameters.environment.hostedZoneName"
        - fromFieldPath: "spec.parameters.environments.development.awsAccountNumber"
          toFieldPath: "spec.parameters.environment.awsAccountNumber"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: spec.parameters.repository.owner
              - fromFieldPath: status.repository.name
            strategy: string
            string:
              fmt: "https://%s.github.io/%s"
          toFieldPath: spec.parameters.repository.chartsURL
          policy:
            fromFieldPath: Required
        - fromFieldPath: "status.repository.gitURL"
          toFieldPath: "spec.parameters.repository.gitURL"
        - fromFieldPath: spec.parameters.privateRepository.name
          toFieldPath: spec.parameters.privateRepository.name
        - fromFieldPath: spec.parameters.privateRepository.url
          toFieldPath: spec.parameters.privateRepository.url
        - fromFieldPath: spec.parameters.privateRepository.externalSecret.name
          toFieldPath: spec.parameters.privateRepository.externalSecret.name
        - type: ToCompositeFieldPath
          fromFieldPath: status.kubernetesProviderConfigName
          toFieldPath: status.environments.development.kubernetesProviderConfigName
        - type: ToCompositeFieldPath
          fromFieldPath: status.sqlProviderConfigName
          toFieldPath: status.environments.development.sqlProviderConfigName
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.uid
          toFieldPath: status.environments.development.clusterID


  #
  # Cluster Repo
  #

    - name: github-repo
      base:
        apiVersion: jk8s.io/v1beta1
        kind: XGitHubRepo
      patches:    
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: "spec.parameters.name"
          toFieldPath: "spec.parameters.name"
          transforms:
            - type: string
              string:
                fmt: "cluster-%s"
        - fromFieldPath: "spec.parameters.repository.owner"
          toFieldPath: "spec.parameters.owner"
        - fromFieldPath: "spec.parameters.repository.org"
          toFieldPath: "spec.parameters.org"
        - type: ToCompositeFieldPath
          fromFieldPath: status.gitURL
          toFieldPath: status.repository.gitURL
        - type: ToCompositeFieldPath
          fromFieldPath: status.htmlURL
          toFieldPath: status.repository.htmlURL
        - type: ToCompositeFieldPath
          fromFieldPath: spec.parameters.name
          toFieldPath: status.repository.name

  #
  # Cluster Repo App
  # 

  # DEPRECATE: This was an ill-fated experiment to see if it was better
  #            to have the management cluster do more of the resource provisioning
  #            for apps. Mostly it was born out of a premature concern around where
  #            the CI workflows would live. But, this was a bad idea. The management
  #            cluster is a single unit and therefore has an inherently large blast
  #            radius. It's sole responsibility must be the provisioning of cluster
  #            that then manage themselves. 

    # - name: argocd-app
    #   base:
    #     apiVersion: kubernetes.crossplane.io/v1alpha1
    #     kind: Object
    #     spec:
    #       forProvider:
    #         manifest:
    #           apiVersion: argoproj.io/v1alpha1
    #           kind: Application
    #           metadata:
    #             namespace: jk8s
    #           spec:
    #             project: default
    #             source:
    #               path: charts/apps
    #               targetRevision: HEAD
    #             syncPolicy:
    #               automated: 
    #                 prune: true
    #             destination:
    #               namespace: app
    #               server: https://kubernetes.default.svc
    #   patches:
    #     - fromFieldPath: metadata.name
    #       toFieldPath: spec.forProvider.manifest.metadata.name
    #       transforms:
    #         - type: string
    #           string:
    #             fmt: "cluster-%s"
    #     - fromFieldPath: status.repository.htmlURL
    #       toFieldPath: spec.forProvider.manifest.spec.source.repoURL
    #     - type: CombineFromComposite
    #       combine:
    #         variables:
    #           - fromFieldPath: status.environments.development.clusterID
    #           - fromFieldPath: spec.parameters.environments.development.hostedZoneID
    #           - fromFieldPath: spec.parameters.environments.development.hostedZoneName
    #           - fromFieldPath: status.environments.development.kubernetesProviderConfigName
    #           - fromFieldPath: status.environments.development.sqlProviderConfigName

    #           - fromFieldPath: status.environments.production.clusterID
    #           - fromFieldPath: spec.parameters.environments.production.hostedZoneID
    #           - fromFieldPath: spec.parameters.environments.production.hostedZoneName
    #           - fromFieldPath: status.environments.production.kubernetesProviderConfigName
    #           - fromFieldPath: status.environments.production.sqlProviderConfigName
    #         strategy: string
    #         string:
    #           fmt: |
    #             clusterSet:
    #               environments:
    #                 - name: development
    #                   clusterID: %s
    #                   hostedZoneID: %s
    #                   hostedZoneName: %s
    #                   kubernetesProviderConfigName: %s
    #                   sqlProviderConfigName: %s
    #                 - name: production
    #                   clusterID: %s
    #                   hostedZoneID: %s
    #                   hostedZoneName: %s
    #                   kubernetesProviderConfigName: %s
    #                   sqlProviderConfigName: %s
    #       toFieldPath: spec.forProvider.manifest.spec.source.helm.values
    #       policy:
    #         fromFieldPath: Required

