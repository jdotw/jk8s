apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: jk8s-deployment-xcanarydeployment-composition
spec:

  compositeTypeRef:
    apiVersion: jk8s.io/v1beta1
    kind: XCanaryDeployment

  patchSets:
    - name: common-parameters
      patches:
        - fromFieldPath: spec.parameters.argocd.instance
          toFieldPath: spec.forProvider.manifest.metadata.labels[argocd.argoproj.io/instance]
        - fromFieldPath: spec.parameters.namespace
          toFieldPath: spec.forProvider.manifest.metadata.namespace


  resources:

    - name: stable-service
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Service
              spec:
                ports:
                  - name: http
                    port: 80
                    protocol: TCP
                    targetPort: 8080
                selector:
                  app: "{{ .Values.app.name }}-rollout"
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-svc-stable"
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.selector.app
          transforms:
            - type: string
              string:
                fmt: "%s-rollout"

    - name: canary-service
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Service
              spec:
                ports:
                  - name: http
                    port: 80
                    protocol: TCP
                    targetPort: 8080
                selector:
                  app: "{{ .Values.app.name }}-rollout"
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-svc-canary"
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.selector.app
          transforms:
            - type: string
              string:
                fmt: "%s-rollout"

    - name: virtual-service
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: networking.istio.io/v1alpha3
              kind: VirtualService
              spec:
                gateways:
                  - istio-ingress/ingress-gateway
                  - mesh
                http:
                  - name: primary
                    route:
                      # stable
                      - destination: {}
                        weight: 100
                      # canary
                      - destination: {}
                        weight: 0
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-vs"
        - fromFieldPath: spec.parameters.virtualService.hosts
          toFieldPath: spec.forProvider.manifest.spec.hosts
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.http[0].route[0].destination.host
          transforms:
            - type: string
              string:
                fmt: "%s-svc-stable"
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.http[0].route[1].destination.host
          transforms:
            - type: string
              string:
                fmt: "%s-svc-canary"



    - name: rollout1
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: argoproj.io/v1alpha1
              kind: Rollout
              spec:
                template:
                  spec:
                    containers:
                      - imagePullPolicy: Always
                        ports:
                          - containerPort: {{ int .Values.app.containerPort }}
                        envFrom:
                          - secretRef:
                              name: rds
                        env:
                          {{ toYaml .Values.app.extraEnv | nindent 12 }}
                strategy:
                  canary:
                    steps: 
                      {{ toYaml .Values.strategy.canary.steps | nindent 8 }}
                    canaryService: "{{ .Values.app.name }}-svc-canary"
                    stableService: "{{ .Values.app.name }}-svc-stable"
                    trafficRouting:
                      istio:
                        virtualService:
                          name: "{{ .Values.app.name }}-vs"
                          routes:
                            - primary
      patches:
        - type: PatchSet
          patchSetName: common-parameters
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-rollout"
        - fromFieldPath: spec.parameters.app.replicas
          toFieldPath: spec.forProvider.manifest.replicas
        - fromFieldPath: spec.parameters.app.revisionHistoryLimit
          toFieldPath: spec.forProvider.manifest.revisionHistoryLimit
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.selector.matchLabels.app
          transforms:
            - type: string
              string:
                fmt: "%s-rollout"
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.template.metadata.labels.app
          transforms:
            - type: string
              string:
                fmt: "%s-rollout"
        - fromFieldPath: spec.parameters.app.version
          toFieldPath: spec.forProvider.manifest.spec.template.metadata.labels.version
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].name
        - fromFieldPath: spec.parameters.app.image
          toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].image


        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.http[0].route[0].destination.host
          transforms:
            - type: string
              string:
                fmt: "%s-svc-stable"
        - fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.manifest.spec.http[0].route[1].destination.host
          transforms:
            - type: string
              string:
                fmt: "%s-svc-canary"


